//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace checkintegration.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class Registration
    {
        [Required]
        public int UserID { get; set; }

        [Required]
        [RegularExpression("^[a-z A-Z]+",ErrorMessage="Only alphabate is allowed")]
        [StringLength(50, MinimumLength = 3)]
        [Display(Name = "First Name:")]
        public string FirstName { get; set; }


        [Required]
        [RegularExpression("^[a-z A-Z]+", ErrorMessage = "Only alphabate is allowed")]
        [StringLength(50, MinimumLength = 3)]
        [Display(Name = "Last Name:")]
        public string LastName { get; set; }

        [Required]
        [Display(Name = "UserName:")]
        public string UserName { get; set; }

        [Required]
        [EmailAddress]
        [StringLength(100)]
        [Display(Name = "Email Address:")]
        public string EmailId { get; set; }

        [Required]
        [DataType(DataType.Password)]
        [StringLength(100, MinimumLength = 8)]
        [Display(Name = "Password:")]
        public string Password { get; set; }

        [Required]
        [DataType(DataType.Password)]
        [StringLength(100, MinimumLength = 8)]
        [Compare("Password", ErrorMessage = "Confirm Password and Password is not matching...")]
        [Display(Name = "Confirm Password:")]
        public string ConfirmPassword { get; set; }

        [DataType(DataType.Password)]
        [StringLength(100, MinimumLength = 8)]
        [Display(Name = "New Password:")]
        public string NewPassword { get; set; }

        [DataType(DataType.Password)]
        [StringLength(100, MinimumLength = 8)]
        [Compare("NewPassword", ErrorMessage = "NewConfirm Password and New Password is not matching...")]
        [Display(Name = "NewConfirm Password:")]
        public string NewConfirmPassword { get; set; }

       // [Required]
       // [RegularExpression("^[m M f F]", ErrorMessage = "Only M or F is acceptable")]
       // [Display(Name="Gender( m or f):")]
        public string Gender { get; set; }


        public int RoleId { get; set; }

        [Required]
        public string Address { get; set; }

        [Required]
        [RegularExpression("^[1-9][0-9]{5}$", ErrorMessage = "Only 6 digits are allowed")]
        public int Pincode { get; set; }

        [Required]
        [Display(Name = "Phone Number:")]
        [DataType(DataType.PhoneNumber)]
        [RegularExpression(@"^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$")]
        public string PhoneNumber { get; set; }
    }
}
